map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

upstream app_server {
    server unix:/run/gunicorn.sock fail_timeout=0;
}

upstream websocket_server {
    server unix:/run/uvicorn.sock;

}


server {
    listen 80 default_server;

    if ($host = obrisk.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    return 444; #This is a default server and it blocks all disallowed hosts
}


server {
    if ($host = www.obrisk.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = obrisk.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name www.obrisk.com;
    return 404; # managed by Certbot

}


server {
    server_name www.obrisk.com;  # here can also be the IP address of the server

    keepalive_timeout 5;
    client_max_body_size 4G;

    access_log /home/obrisk/logs/nginx-access.log;
    error_log /home/obrisk/logs/nginx-error.log;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        autoindex on;
        alias /home/obrisk/obdev2018/staticfiles/;
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
        proxy_ignore_headers "Set-Cookie";
    }

    location @proxy_to_app {
        proxy_read_timeout 180;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://app_server;
}

    location @proxy_to_ws {
          proxy_pass http://websocket_server;
          proxy_http_version 1.1;

          proxy_redirect off;
          proxy_buffering off;
          proxy_set_header X-Forwarded-Proto https;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Url-Scheme $scheme;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";

    }

    # checks for static file, if not found proxy to app
    location / {
        try_files $uri @proxy_to_app;
    }

    location /ws/ {
          try_files $uri @proxy_to_ws;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/obrisk.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/obrisk.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


