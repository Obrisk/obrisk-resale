# PostgreSQL conf, The order below is very important. Also the URL.
#POSTGRES_NAME= postgres
#POSTGRES_USER=postgres
#POSTGRES_PASSWORD=obriskdev2018
#POSTGRES_HOST=postgres   # <-- IMPORTANT: same name as docker-compose service!
#POSTGRES_PORT=5432
#POSTGRES_ENGINE='django.db.backends.postgresql'


#below url means == db_name://database_user:password@host:port_number/db_name
#DATABASE_URL=postgresql://postgres:obriskdev2018@postgres:5432/postgres
# CONN_MAX_AGE=
# To uncomment for an SQLite local testing
# DATABASE_URL=sqlite:///db.sqlite3
# URL to have SQLite example and to pass TravisCI
DATABASE_URL=sqlite:////tmp/db.sqlite3

# Domain name, used by caddy
# DOMAIN_NAME=http://try.com

# General settings
READ_DOT_ENV_FILE=True
ADMIN_URL=
SETTINGS_MODULE=config.settings.test
SECRET_KEY=Sup3rS3cr3tP@22word
DEBUG=True
ALLOWED_HOSTS=*
# ALLOWED_HOSTS=.http://try.com
# ACCOUNT_ALLOW_REGISTRATION=True

# AWS Settings
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_STORAGE_BUCKET_NAME=

# Used with email
MAILGUN_API_KEY=
SERVER_EMAIL=
MAILGUN_SENDER_DOMAIN=

# Security! Better to use DNS for this task, but you can use redirect
SECURE_SSL_REDIRECT=False

# Sentry
SENTRY_DSN=

# URL for Redis
REDIS_URL=redis://127.0.0.1:6379
