function imgClient(t){function e(t,e,s){s=s||{},e=this._objectName(e);const i=`/${this.options.bucket}/${e}`,a={name:e,method:t,host:this.options.imageHost,resource:"/"+e,timeout:s.timeout,authResource:i,ctx:s.ctx};return s.headers&&(a.headers=s.headers),a}function s(i){if(!(this instanceof s))return new s(i);if(!i.bucket)throw new Error("require bucket for image service instance");if(!i.imageHost)throw new Error("require imageHost for image service instance");this.client=new t(i),this.client.options.imageHost=i.imageHost,this.client._objectRequestParams=e}return s.prototype.get=async function(t,e,s){return await this.client.get(t,e,s)},s.prototype.getStream=async function(t,e){return await this.client.getStream(t,e)},s.prototype.getExif=async function(t,e){const s=this.client._objectRequestParams("GET",t+"@exif",e);s.successStatuses=[200];let i=await this.client.request(s);return i=await this._parseResponse(i),{res:i.res,data:i.data}},s.prototype.getInfo=async function(t,e){const s=this.client._objectRequestParams("GET",t+"@infoexif",e);s.successStatuses=[200];let i=await this.client.request(s);return i=await this._parseResponse(i),{res:i.res,data:i.data}},s.prototype.signatureUrl=function(t){return this.client.signatureUrl(t,this.client.options.imageHost)},s.prototype._parseResponse=async function(t){const e=t.data.toString(),s=t.res.headers["content-type"];if("application/json"===s){const s=JSON.parse(e);t.data={},s&&Object.keys(s).forEach(e=>{t.data[e]=parseFloat(s[e].value,10)||s[e].value})}else"application/xml"===s&&(t.data=await this.client.parseXML(e));return t},s}